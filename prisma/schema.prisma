generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  name       String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  password   String
  depositos  Deposito[]
  ibans      IBAN[]
  Post       Post[]
  transacoes Transacao[]
  userPlanos UserPlano[]
  userRotas  UserRota[]
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  authorId  Int?
  User      User?   @relation(fields: [authorId], references: [id])
}

model Cat {
  id    Int     @id @default(autoincrement())
  name  String
  age   Int?
  alive Boolean @default(true)
}

model Dog {
  id     Int    @id @default(autoincrement())
  name   String
  color  String
  height Int?
  weight Int?
}

model Deposito {
  id     Int      @id @default(autoincrement())
  valor  Float
  userId Int
  data   DateTime @default(now())
  user   User     @relation(fields: [userId], references: [id])
}

model Produto {
  id        Int      @id @default(autoincrement())
  nome      String
  descricao String?
  preco     Float
  estoque   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model IBAN {
  id        Int      @id @default(autoincrement())
  codigo    String   @unique
  userId    Int
  banco     String
  agencia   String
  conta     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model Transacao {
  id        Int      @id @default(autoincrement())
  tipo      String
  valor     Float
  userId    Int
  data      DateTime @default(now())
  descricao String?
  user      User     @relation(fields: [userId], references: [id])
}

model Plano {
  id         Int         @id @default(autoincrement())
  nome       String
  preco      Float
  descricao  String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  userPlanos UserPlano[]
}

model Rota {
  id        Int        @id @default(autoincrement())
  nome      String
  destino   String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userRotas UserRota[]
}

model UserPlano {
  userId  Int
  planoId Int
  plano   Plano @relation(fields: [planoId], references: [id])
  user    User  @relation(fields: [userId], references: [id])

  @@id([userId, planoId])
}

model UserRota {
  userId Int
  rotaId Int
  rota   Rota @relation(fields: [rotaId], references: [id])
  user   User @relation(fields: [userId], references: [id])

  @@id([userId, rotaId])
}

model playing_with_neon {
  id    Int    @id @default(autoincrement())
  name  String
  value Float? @db.Real
}
